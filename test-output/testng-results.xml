<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="8877" started-at="2019-10-12T17:04:28 EDT" finished-at="2019-10-12T17:04:37 EDT">
    <groups>
    </groups>
    <test name="Default test" duration-ms="8877" started-at="2019-10-12T17:04:28 EDT" finished-at="2019-10-12T17:04:37 EDT">
      <class name="uitests.FindMyNextElectionPageUI">
        <test-method status="PASS" signature="setUp()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="setUp" is-config="true" duration-ms="6586" started-at="2019-10-12T17:04:28 EDT" finished-at="2019-10-12T17:04:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="181" started-at="2019-10-12T17:04:34 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="verifyCityFieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifyCityFieldLabel" duration-ms="36" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCityFieldLabel -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="1" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCityFieldLabel status=SUCCESS method=FindMyNextElectionPageUI.verifyCityFieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="109" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="verifyHeaderText()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifyHeaderText" duration-ms="29" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderText -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="106" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="0" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHeaderText status=SUCCESS method=FindMyNextElectionPageUI.verifyHeaderText()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="FAIL" signature="verifySearchButtonLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifySearchButtonLabel" duration-ms="19" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".\.button"}
  (Session info: chrome=77.0.3865.90)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MICHAELVU-PC', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_212'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.90, chrome: {chromedriverVersion: 77.0.3865.40 (f484704e052e0..., userDataDir: C:\Users\MICHAE~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:52022}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 0769f9c337c993ad28b486e7496fd384
*** Element info: {Using=class name, value=.button}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".\.button"}
  (Session info: chrome=77.0.3865.90)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MICHAELVU-PC', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_212'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.90, chrome: {chromedriverVersion: 77.0.3865.40 (f484704e052e0..., userDataDir: C:\Users\MICHAE~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:52022}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 0769f9c337c993ad28b486e7496fd384
*** Element info: {Using=class name, value=.button}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName(RemoteWebDriver.java:412)
at org.openqa.selenium.By$ByClassName.findElement(By.java:389)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at com.sun.proxy.$Proxy13.findElement(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
at pages.FindMyNextElectionPage.getSearchButtonLabel(FindMyNextElectionPage.java:58)
at uitests.FindMyNextElectionPageUI.verifySearchButtonLabel(FindMyNextElectionPageUI.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchButtonLabel -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="244" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchButtonLabel status=FAILURE method=FindMyNextElectionPageUI.verifySearchButtonLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="164" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="verifyStateDropdownLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifyStateDropdownLabel" duration-ms="26" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStateDropdownLabel -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="379" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="0" started-at="2019-10-12T17:04:35 EDT" finished-at="2019-10-12T17:04:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStateDropdownLabel status=SUCCESS method=FindMyNextElectionPageUI.verifyStateDropdownLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="verifyStreet2FieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifyStreet2FieldLabel" duration-ms="27" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStreet2FieldLabel -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="0" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStreet2FieldLabel status=SUCCESS method=FindMyNextElectionPageUI.verifyStreet2FieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="83" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="verifyStreetFieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifyStreetFieldLabel" duration-ms="28" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStreetFieldLabel -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="0" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStreetFieldLabel status=SUCCESS method=FindMyNextElectionPageUI.verifyStreetFieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="108" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="verifyUserMessage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifyUserMessage" duration-ms="28" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserMessage -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="1" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserMessage status=SUCCESS method=FindMyNextElectionPageUI.verifyUserMessage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="gofindMyNextElectionPage()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="gofindMyNextElectionPage" is-config="true" duration-ms="95" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gofindMyNextElectionPage -->
        <test-method status="PASS" signature="verifyZipFieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="verifyZipFieldLabel" duration-ms="23" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyZipFieldLabel -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="tearDown" is-config="true" duration-ms="577" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:37 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b]" name="recordFailure" is-config="true" duration-ms="0" started-at="2019-10-12T17:04:36 EDT" finished-at="2019-10-12T17:04:36 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyZipFieldLabel status=SUCCESS method=FindMyNextElectionPageUI.verifyZipFieldLabel()[pri:0, instance:uitests.FindMyNextElectionPageUI@7e2d773b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
      </class> <!-- uitests.FindMyNextElectionPageUI -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
